{
  "resourceType": "Library",
  "id": "library-AdvancedIllnessandFrailtyExclusion-6.0.000",
  "text": {
    "status": "generated",
    "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><table class=\"grid dict\"><tr><th scope=\"row\"><b>Id: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">library-AdvancedIllnessandFrailtyExclusion-6.0.000</td></tr><tr><th scope=\"row\"><b>Type: </b></th><td style=\"padding-right: 25px;\"> logic-library </td></tr><tr><th scope=\"row\"><b>Version: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">6.0.000</td></tr><tr><th scope=\"row\"><b>Status: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\">active</td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"2\" scope=\"row\"><b>Related: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>http://fhir.org/guides/dbcg/connectathon/Library/library-FHIRHelpers|4.0.1</span></p></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><p style=\"margin-bottom: 5px;\"><b>type: </b><span>depends-on</span></p><p style=\"margin-bottom: 5px;\"><b>Resource: </b><br/><span>http://fhir.org/guides/dbcg/connectathon/Library/library-MATGlobalCommonFunctions|5.0.000</span></p></td></tr><tr style=\"vertical-align: top;\"><th rowspan=\"15\" scope=\"row\"><b>Data Requirements: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>DeviceRequest</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>codeCodeableConcept</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.118.12.1300</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>DeviceUseStatement</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>device.code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.118.12.1300</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Condition</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.113.12.1074</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1088</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Observation</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.113.12.1075</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1087</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1086</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1085</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1084</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Condition</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.110.12.1082</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1083</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Condition</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>code</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.110.12.1082</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>MedicationDispense</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>medication</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.196.12.1510</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1014</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><td style=\"padding-left: 25px; padding-right: 25px;\"><div><p style=\"margin-bottom: 5px;\"><b>type: </b><span>Encounter</span></p><p style=\"margin-bottom: 5px;\"><b>code filter:</b><br/><span style=\"padding-left: 25px;\"><b>path: </b><span>type</span></span><br/><span style=\"padding-left: 25px;\"><b>valueset: </b><span>http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1012</span></span></p></div></td></tr><tr style=\"vertical-align: top;\"><th scope=\"row\"><b>Content: </b></th><td style=\"padding-left: 25px; padding-right: 25px;\"><b>type: </b><span>text/cql</span></td></tr><tr><td colspan=\"2\" style=\"padding-left: 25px; padding-right: 25px;\"><pre><code class=\"language-cql\">library AdvancedIllnessandFrailtyExclusion version '6.0.000'\n\n/*\n@update: @@BTR 2020-03-31 -&gt;\nIncremented version to 5.0.000\nUpdated FHIR version to 4.0.1\n@@@\n*/\n\nusing FHIR version '4.0.1'\n\ninclude FHIRHelpers version '4.0.1' called FHIRHelpers\ninclude MATGlobalCommonFunctions version '5.0.000' called Global\n\ncodesystem &quot;LOINC&quot;: 'http://loinc.org'\n\nvalueset &quot;Acute Inpatient&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1083'\nvalueset &quot;Advanced Illness&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.110.12.1082'\nvalueset &quot;Care Services in Long-Term Residential Facility&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1014'\nvalueset &quot;Dementia Medications&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.196.12.1510'\nvalueset &quot;ED&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1085'\nvalueset &quot;Frailty Device&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.118.12.1300'\nvalueset &quot;Frailty Diagnosis&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.113.12.1074'\nvalueset &quot;Frailty Encounter&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1088'\nvalueset &quot;Frailty Symptom&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.113.12.1075'\nvalueset &quot;Nonacute Inpatient&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1084'\nvalueset &quot;Nursing Facility Visit&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1012'\nvalueset &quot;Observation&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1086'\nvalueset &quot;Outpatient&quot;: 'http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1087'\n\ncode &quot;Birth date&quot;: '21112-8' from &quot;LOINC&quot; display 'Birth date'\n\nparameter &quot;Measurement Period&quot; Interval&lt;DateTime&gt;\n  default Interval[@2019-01-01T00:00:00.0, @2020-01-01T00:00:00.0)\n\ncontext Patient\n\ndefine &quot;Advanced Illness and Frailty Exclusion Including Over Age 80&quot;:\n\t//If the measure includes populations age 80 and older, then use this logic:\n\t(\n        Global.&quot;CalendarAgeInYearsAt&quot;(FHIRHelpers.ToDate(Patient.birthDate), start of &quot;Measurement Period&quot;)in Interval[66, 80]\n            and &quot;Has Criteria Indicating Frailty&quot;\n            and ( Count(&quot;Outpatient Encounters with Advanced Illness&quot;)&gt;= 2\n                or exists ( &quot;Inpatient Encounter with Advanced Illness&quot; )\n                or exists &quot;Dementia Medications In Year Before or During Measurement Period&quot;\n            )\n\t)\n\t\tor (\n            Global.&quot;CalendarAgeInYearsAt&quot;(FHIRHelpers.ToDate(Patient.birthDate), start of &quot;Measurement Period&quot;)&gt;= 81\n\t\t\t    and &quot;Has Criteria Indicating Frailty&quot;\n\t\t)\n\ndefine &quot;Advanced Illness and Frailty Exclusion Including Under Age 80&quot;:\n\t//If the measure does NOT include populations age 80 and older, then use this logic:\n\tGlobal.&quot;CalendarAgeInYearsAt&quot;(FHIRHelpers.ToDate(Patient.birthDate), start of &quot;Measurement Period&quot;)&gt;= 65\n        and &quot;Has Criteria Indicating Frailty&quot;\n        and ( Count(&quot;Outpatient Encounters with Advanced Illness&quot;)&gt;= 2\n            or exists ( &quot;Inpatient Encounter with Advanced Illness&quot; )\n            or exists &quot;Dementia Medications In Year Before or During Measurement Period&quot;\n        )\n\ndefine &quot;Outpatient Encounters with Advanced Illness&quot;:\n\t( [Encounter: &quot;Outpatient&quot;]\n\t\tunion [Encounter: &quot;Observation&quot;]\n\t\tunion [Encounter: &quot;ED&quot;]\n\t\tunion [Encounter: &quot;Nonacute Inpatient&quot;] ) OutpatientEncounter\n\t\t with [Condition: &quot;Advanced Illness&quot;] AdvancedIllnessDiagnosis\n            such that exists (\n                OutpatientEncounter.diagnosis.condition EncounterDiagnosis\n                    where EndsWith(EncounterDiagnosis.reference, AdvancedIllnessDiagnosis.id)\n            )\n            and OutpatientEncounter.period starts 2 years or less on or before\n\t\t\tend of &quot;Measurement Period&quot;\n\ndefine &quot;Inpatient Encounter with Advanced Illness&quot;:\n\t[Encounter: &quot;Acute Inpatient&quot;] InpatientEncounter\n\t\twith [Condition: &quot;Advanced Illness&quot;] AdvancedIllnessDiagnosis\n            such that exists (\n                InpatientEncounter.diagnosis.condition EncounterDiagnosis\n                    where EndsWith(EncounterDiagnosis.reference, AdvancedIllnessDiagnosis.id)\n            )\n\t\t\tand InpatientEncounter.period starts 2 years or less on or before\n\t\t\tend of &quot;Measurement Period&quot;\n// start here\ndefine &quot;Dementia Medications In Year Before or During Measurement Period&quot;:\n\t[&quot;MedicationDispense&quot;: &quot;Dementia Medications&quot;] DementiaMed\n\t\twhere DementiaMed.whenHandedOver during Interval[\n            ( start of &quot;Measurement Period&quot; - 1 year ), end of &quot;Measurement Period&quot;\n        ]\n\ndefine &quot;Has Criteria Indicating Frailty&quot;:\n//Ask Bryn about devices\n\texists ( [DeviceRequest: &quot;Frailty Device&quot;] FrailtyDeviceOrder\n\t\t\twhere FrailtyDeviceOrder.authoredOn during &quot;Measurement Period&quot;\n\t)\n\t\tor exists ( [DeviceUseStatement: &quot;Frailty Device&quot;] FrailtyDeviceUse\n\t\t\t\twhere Global.&quot;Normalize Interval&quot;(FrailtyDeviceUse.timing) overlaps &quot;Measurement Period&quot;\n\t\t)\n\t\tor exists ( [Condition: &quot;Frailty Diagnosis&quot;] FrailtyDiagnosis\n\t\t\t\twhere Global.&quot;Prevalence Period&quot;(FrailtyDiagnosis) overlaps &quot;Measurement Period&quot;\n\t\t)\n\t\tor exists ( [Encounter: &quot;Frailty Encounter&quot;] FrailtyEncounter\n\t\t\t\twhere FrailtyEncounter.period overlaps &quot;Measurement Period&quot;\n\t\t)\n\t\tor exists ( [Observation: &quot;Frailty Symptom&quot;] FrailtySymptomObservation\n\t\t\t\twhere Global.&quot;Normalize Interval&quot;(FrailtySymptomObservation.effective) overlaps &quot;Measurement Period&quot;\n\t\t)\n\n\n        define &quot;Long Term Care Periods During Measurement Period&quot;:\n        \t( [Encounter: &quot;Care Services in Long-Term Residential Facility&quot;]\n        \t\tunion [Encounter: &quot;Nursing Facility Visit&quot;] ) LongTermFacilityEncounter\n        \t\twhere LongTermFacilityEncounter.period overlaps &quot;Measurement Period&quot;\n        \t\treturn LongTermFacilityEncounter.period\n        \t\t\tintersect &quot;Measurement Period&quot;\n\ndefine &quot;Has Spent More Than 90 Days in Long Term Care&quot;:\n\t&quot;Days Spent in Long Term Care During Measurement Period&quot; &gt; 90\n\ndefine &quot;Days Spent in Long Term Care During Measurement Period&quot;:\n\t&quot;CumulativeDays&quot;(&quot;Long Term Care Periods During Measurement Period&quot;)\n\ndefine function &quot;CumulativeDays&quot;(Intervals List&lt;Interval&lt;DateTime&gt;&gt; ):\n\tSum((collapse Intervals)CollapsedInterval\n\t\t\treturn all duration in days of CollapsedInterval\n\t)\n</code></pre>\n                    \n                    \n                </td>\n            </tr>\n        \n    </table>\n</div>"
  },
  "contained": [
    {
      "resourceType": "Device",
      "id": "cqf-tooling",
      "meta": {
        "profile": [
          "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/device-softwaresystem-cqfm"
        ]
      },
      "type": {
        "coding": [
          {
            "system": "http://hl7.org/fhir/us/cqfmeasures/CodeSystem/software-system-type",
            "code": "tooling"
          }
        ]
      },
      "version": [
        {
          "value": "1.1.0-SNAPSHOT"
        }
      ]
    }
  ],
  "extension": [
    {
      "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
      "valueReference": {
        "reference": "#cqf-tooling"
      }
    }
  ],
  "version": "6.0.000",
  "name": "AdvancedIllnessandFrailtyExclusion",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [
      {
        "system": "http://terminology.hl7.org/CodeSystem/library-type",
        "code": "logic-library"
      }
    ]
  },
  "relatedArtifact": [
    {
      "type": "depends-on",
      "resource": "Library/library-FHIRHelpers-4.0.1"
    },
    {
      "type": "depends-on",
      "resource": "Library/library-MATGlobalCommonFunctions-5.0.000"
    }
  ],
  "dataRequirement": [
    {
      "type": "DeviceRequest",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/DeviceRequest"
      ],
      "codeFilter": [
        {
          "path": "codeCodeableConcept",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.118.12.1300"
        }
      ]
    },
    {
      "type": "DeviceUseStatement",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/DeviceUseStatement"
      ],
      "codeFilter": [
        {
          "path": "device.code",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.118.12.1300"
        }
      ]
    },
    {
      "type": "Condition",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Condition"
      ],
      "codeFilter": [
        {
          "path": "code",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.113.12.1074"
        }
      ]
    },
    {
      "type": "Encounter",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Encounter"
      ],
      "codeFilter": [
        {
          "path": "type",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1088"
        }
      ]
    },
    {
      "type": "Observation",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Observation"
      ],
      "codeFilter": [
        {
          "path": "code",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.113.12.1075"
        }
      ]
    },
    {
      "type": "Encounter",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Encounter"
      ],
      "codeFilter": [
        {
          "path": "type",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1087"
        }
      ]
    },
    {
      "type": "Encounter",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Encounter"
      ],
      "codeFilter": [
        {
          "path": "type",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1086"
        }
      ]
    },
    {
      "type": "Encounter",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Encounter"
      ],
      "codeFilter": [
        {
          "path": "type",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1085"
        }
      ]
    },
    {
      "type": "Encounter",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Encounter"
      ],
      "codeFilter": [
        {
          "path": "type",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1084"
        }
      ]
    },
    {
      "type": "Condition",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Condition"
      ],
      "codeFilter": [
        {
          "path": "code",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.110.12.1082"
        }
      ]
    },
    {
      "type": "Encounter",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Encounter"
      ],
      "codeFilter": [
        {
          "path": "type",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1083"
        }
      ]
    },
    {
      "type": "Condition",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Condition"
      ],
      "codeFilter": [
        {
          "path": "code",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.110.12.1082"
        }
      ]
    },
    {
      "type": "MedicationDispense",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/MedicationDispense"
      ],
      "codeFilter": [
        {
          "path": "medication",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.196.12.1510"
        }
      ]
    },
    {
      "type": "Encounter",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Encounter"
      ],
      "codeFilter": [
        {
          "path": "type",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1014"
        }
      ]
    },
    {
      "type": "Encounter",
      "profile": [
        "http://hl7.org/fhir/StructureDefinition/Encounter"
      ],
      "codeFilter": [
        {
          "path": "type",
          "valueSet": "http://cts.nlm.nih.gov/fhir/ValueSet/2.16.840.1.113883.3.464.1003.101.12.1012"
        }
      ]
    }
  ],
  "content": [
    {
      "contentType": "application/elm+xml",
      "data": ""
    },
    {
      "contentType": "text/cql",
      "data": ""
    }
  ]
}

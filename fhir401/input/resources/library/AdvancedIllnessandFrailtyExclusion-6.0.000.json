{
  "resourceType": "Library",
  "id": "AdvancedIllnessandFrailtyExclusion-6.0.000",
  "extension": [ {
    "url": "http://hl7.org/fhir/us/cqfmeasures/StructureDefinition/cqfm-softwaresystem",
    "valueReference": {
      "reference": "#cqf-tooling"
    }
  } ],
  "url": "http://fhir.org/guides/dbcg/connectathon/Library/AdvancedIllnessandFrailtyExclusion",
  "version": "6.0.000",
  "name": "AdvancedIllnessandFrailtyExclusion",
  "status": "active",
  "experimental": true,
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "content": [ {
    "contentType": "text/cql",
    "data": ""
  } ]
}